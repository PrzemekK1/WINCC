<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8">txHost</prop>
  </prop>
  <prop name="Size">410 88</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">0 0</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="PDPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[string g_sSystemName;
string g_sHost1;
string g_sHost2;

setReduInfo(string dpe1, bool active1,
            string dpe2, bool active2,
            string dpe3, int split,
            string dpe4, bool splitActive1,
            string dpe5, bool splitActive2,
            string dpe6, int filesync,
            string dpe7, int isRecovering1,
            string dpe8, int isRecovering2
            )
{
  //peer 1
  if(isRecovering1)
  {
    txHost1.text = g_sHost1 + &quot; (recovering)&quot;;
    tfHost1.backCol = &quot;STD_valve_opening&quot;;
  }
  else if(active1)
  {
    txHost1.text = g_sHost1 + &quot; (active)&quot;;
    tfHost1.backCol = &quot;STD_on&quot;;
  }
  else
  {
    txHost1.text = g_sHost1 + &quot; (passive)&quot;;
    tfHost1.backCol = &quot;STD_led_Off&quot;;
  }
  //peer 2
  if(isRecovering2)
  {
    txHost2.text = g_sHost2 + &quot; (recovering)&quot;;
    tfHost2.backCol = &quot;STD_valve_opening&quot;;
  }
  else if(active2)
  {
    txHost2.text = g_sHost2 + &quot; (active)&quot;;
    tfHost2.backCol = &quot;STD_on&quot;;
  }
  else
  {
    txHost2.text = g_sHost2 + &quot; (passive)&quot;;
    tfHost2.backCol = &quot;STD_led_Off&quot;;
  }

  //FileSync:
  if(filesync)
  {
    txFileSync.text = &quot;File sync: Enabled&quot;;
    tfFileSync.backCol = &quot;STD_on&quot;;
  }
  else
  {
    txFileSync.text = &quot;File sync: Disabled&quot;;
    tfFileSync.backCol = &quot;STD_led_Off&quot;;
  }

  //State:
  if(split)
  {
    txReduMode.text = &quot;Split&quot;;
    if (splitActive1)
      txHost2.text = txHost2.text + &quot; - test&quot;; // When host2 is active host 1 is in test

    if (splitActive2)
      txHost1.text = txHost1.text + &quot; - test&quot;; // When host2 is active host 1 is in test

  }
  else
  {
    txReduMode.text = &quot;Redundant&quot;;
  }


}

animateNoConnection()
{
  txHost1.text = g_sHost1;
  tfHost1.backCol = &quot;STD_dp_not_existing&quot;;
  txHost2.text = g_sHost2;
  tfHost2.backCol = &quot;STD_dp_not_existing&quot;;
  txFileSync.text = &quot;File sync: N/A&quot;;
  tfFileSync.backCol = &quot;STD_dp_not_existing&quot;;
  txReduMode.text = &quot;N/A&quot;;
  btnDetails.enabled = false;
}







]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main()
{

  string host = fwInstallation_getHostname($host);
  string project = $project;
  dyn_mixed projProperties;
  int projId;
  string peer1Host, peer2Host;
  if (strtoupper(host) != strtoupper(fwInstallation_getHostname(myReduHost())) || project != PROJ)
  {
    fwInstallationDB_getProjectProperties(project, host, projProperties, projId);
    if (projId &gt; 0)
    {
      g_sSystemName = projProperties[FW_INSTALLATION_DB_PROJECT_SYSTEM_NAME];
      peer1Host = projProperties[FW_INSTALLATION_DB_PROJECT_HOST];
      peer2Host = projProperties[FW_INSTALLATION_DB_PROJECT_REDU_HOST];
    }
  }
  else
  {
    g_sSystemName = getSystemName();
    int localReduNum = fwInstallationRedu_myReduHostNum();


    if(localReduNum == 1)
    {
      peer1Host = strtoupper(host);
      peer2Host = fwInstallationRedu_getPair();
    }
    else
    {
      peer1Host = fwInstallationRedu_getPair();
      peer2Host = strtoupper(host);
    }
  }

  g_sHost1 = &quot;Host #1: &quot; + peer1Host;
  g_sHost2 = &quot;Host #2: &quot; + peer2Host;


  //check whether we have distributed connection to the system
  dyn_int connectedSystems;
  dpGet(fwInstallationRedu_getLocalDp(&quot;_DistManager&quot;) + &quot;.State.SystemNums&quot;, connectedSystems);
  int sysID = getSystemId(g_sSystemName);
  if (g_sSystemName == getSystemName() || (sysID &gt; 0 &amp;&amp; dynContains(connectedSystems, sysID)))// if we have connection to this system
  {
    btnDetails.enabled = true;
    dpConnect(&quot;setReduInfo&quot;,
              g_sSystemName + &quot;_ReduManager.Status.Active&quot;,
              g_sSystemName + &quot;_ReduManager_2.Status.Active&quot;,
              g_sSystemName + &quot;_ReduManager.SplitMode&quot;,
              g_sSystemName + &quot;_ReduManager.SplitActive&quot;,
              g_sSystemName + &quot;_ReduManager_2.SplitActive&quot;,
              g_sSystemName + &quot;_ReduManager.FileSync.State&quot;,
              g_sSystemName + &quot;_ReduManager.IsRecovering&quot;,
              g_sSystemName + &quot;_ReduManager_2.IsRecovering&quot;
            );
  }
  else
    animateNoConnection();
}




]]></script>
 </events>
 <shapes>
  <shape Name="frRedundancy" shapeType="FRAME" layerId="0">
   <properties>
    <prop name="serialId">30</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 4</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">{0,0,0}</prop>
    <prop name="TabOrder">24</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,0]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">0.8891304347826087 0 0 0.9062500000000002 -8.89130434782609 -3.625</prop>
    <prop name="BorderStyle">3D</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Redundancy</prop>
    </prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 4</prop>
    <prop name="Size">461 97</prop>
   </properties>
  </shape>
  <shape Name="txHost1" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">31</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">30 22</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">25</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">30 22</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Peer 1: </prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="txHost2" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">32</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">-111.9999999999999 4.000000000000054</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">26</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">0.9999999999999999 0 0 1 0 -7.999999999999996</prop>
    <prop name="Location">30 50</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Peer 2:</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="txFileSync" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">36</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">30 62</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">30</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="sizePolicy">
     <sizePolicy vertical="Fixed" horizontal="Fixed"/>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">30 62</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">File sync:</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="btnDetails" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">37</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">309 53</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">31</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">309 53</prop>
    <prop name="Size">90 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Details ...</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  ChildPanelOnCentral(&quot;vision/SystemOverviewRedundant.pnl&quot;, &quot;WinCCOASysOverview&quot;, makeDynString(&quot;$System:&quot; + g_sSystemName));
}

]]></script>
   </events>
  </shape>
  <shape Name="txReduMode" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">42</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">169 60</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">36</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8">Mode</prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">309 20</prop>
    <prop name="Size">90 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">False</prop>
    <prop name="ClearButtonEnabled">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
    <prop name="ulcClientSideWidget">False</prop>
   </properties>
  </shape>
  <shape Name="tfHost1" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">43</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">270 310</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">white</prop>
    <prop name="TabOrder">37</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 1 -9 -268</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">20 290</prop>
    <prop name="Size">16 16</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="tfHost2" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">44</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">270 310</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">white</prop>
    <prop name="TabOrder">38</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 1 -9 -248</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">20 290</prop>
    <prop name="Size">16 16</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="tfFileSync" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">45</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">270 310</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">white</prop>
    <prop name="TabOrder">39</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 1 -9 -228</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">20 290</prop>
    <prop name="Size">16 16</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
 </shapes>
</panel>
